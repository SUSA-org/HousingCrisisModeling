data[157:301,15] <- miles[,ind]
tables[[i]] <- data
}
print(proc.time() - start)
}
shape(crime[121:433,2])
dim(crime[121:433,2])
crime[121:433,2]
class(crime[121:433,2])
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
data[1:313,12] <- crime[121:433,i+1]
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fare))
data[157:301,13] <- fare[,ind]
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
tables[[i]] <- data
}
print(proc.time() - start)
}
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fare))
data[157:301,13] <- fare[,ind]
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
tables[[i]] <- data
}
print(proc.time() - start)
}
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fare))
data[157:301,13] <- fare[,ind]
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
print("wee")
tables[[i]] <- data
}
print(proc.time() - start)
}
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
print("woo")
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fare))
data[157:301,13] <- fare[,ind]
print("waa")
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
print("wee")
tables[[i]] <- data
}
print(proc.time() - start)
}
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
print("woo")
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fares))
data[157:301,13] <- fares[,ind]
print("waa")
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
print("wee")
tables[[i]] <- data
}
print(proc.time() - start)
}
fares <- readRDS("Monthly_RDS/PassengerFareByMonth.rds")
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
print("woo")
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fares))
data[157:301,13] <- fares[,ind]
print("waa")
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
print("wee")
tables[[i]] <- data
}
print(proc.time() - start)
}
fares
colnames(fares)
colnames(fares[order(fares)])
colnames(fares)[order()]
sort(colnames(fares))
setdiff(colnames(fares),countynames)
setdiff(countynames,colnames(fares))
unique(sort(colnames(fares)))
View(fares)
which(colnames(fares)=="Stanislaus")
which(colnames(hours)=="Stanislaus")
colnames(fares)[50] <- "Yuba"
colnames(hours)[50] <- "Yuba"
colnames(miles)[50] <- "Yuba"
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
print("woo")
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fares))
data[157:301,13] <- fares[,ind]
print("waa")
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
print("wee")
tables[[i]] <- data
}
print(proc.time() - start)
}
if (TRUE) {
tables <- list()
num_cols = 15
start <- proc.time()
for (i in 1:58) {
data <- data.frame(matrix(ncol = num_cols, nrow = 336))
countyname = countynames[i]
colnames(data)[1] <- "Date"
data$Date <- seq(1990,2017+11/12,1/12)
colnames(data)[2] <- "Median Home Price"
ind = which(colnames(medhomecsv) == countyname)
if (length(ind) != 0) {
data[,2] <- clean.numeric(medhomecsv[,ind])
}
colnames(data)[3] <- c("Vacancy Rates")
data[1:325, 3] <- clean.numeric(vacancy[, i+1])
# colnames(data)[3] <- c("Rental Price")
# ind <- which(rentalprice$RegionName == countyname)
# if (length(ind) != 0) {
#   data[241:334, 3] <- c(clean.numeric(rentalprice[ind,7:100]))
# }
colnames(data)[4] <- c("Building permits")
data[133:336, 4] <- c(clean.numeric(buildingpermits[i,-seq(13,221,13)]))
colnames(data)[5] <- c("Unemployment")
countyunemployment <- subset(unemployment, grepl(countyname,`Area Name`) & `Seasonally Adjusted (Y/N)`=="N")
data[,5] <- countyunemployment[,10]
colnames(data)[6] <- c("ValuePerSquareFoot")
ind <- which(grepl(countyname, colnames(valuepersquarefoot)))
if (length(ind) != 0) {
data[76:336, 6] <- valuepersquarefoot[1:261,ind]
}
colnames(data)[7] <- c("Foreclosures")
data[97:332, 7] <- clean.numeric(foreclosures[,i+1])
colnames(data)[8] <- c("Gas Consumption")
data[1:313, 8] <- clean.numeric(gasconsumption[, i+1])
colnames(data)[9] <- c("Electricity")
data[1:313, 9] <- clean.numeric(electricity[, i+1])
colnames(data)[10] <- c("Median Income")
ind <- which(countyname == colnames(income))
data[73:301, 10] <- clean.numeric(income[,ind])
colnames(data)[11] <- c("Population Density")
data[1:313, 11] <- clean.numeric(popdens[,i+1])
colnames(data)[12] <- c("Crime Occurrences")
print(i)
data[1:313,12] <- crime[121:433,i+1]
colnames(data)[13] <- c("Passenger Fares")
ind <- which(countyname == colnames(fares))
data[157:301,13] <- fares[,ind]
colnames(data)[14] <- c("Vehicle Hours Driven")
ind <- which(countyname == colnames(hours))
data[157:301,14] <- hours[,ind]
colnames(data)[15] <- c("Vehicle Miles Driven")
ind <- which(countyname == colnames(miles))
data[157:301,15] <- miles[,ind]
tables[[i]] <- data
}
print(proc.time() - start)
}
counts <- cbind(tables[[1]])
counts[,-1] <- 0
for (i in 1:length(tables)) {
counts[,-1] <- counts[,-1] + 1 - matrix(as.numeric(is.na.data.frame(tables[[i]][,-1])), nrow=336, byrow=FALSE)
}
View(counts)
df <- read.RDS("Monthly_RDS/CountyMonthlyData.RDS")
df <- readRDS("Monthly_RDS/CountyMonthlyData.RDS")
View(df)
View(tables[[1]])
View(df[[1]])
saveRDS(tables, "Monthly_RDS/CountyMonthlyData.RDS")
