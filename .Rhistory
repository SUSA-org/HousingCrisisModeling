plt %<>% add(xlab("Year"))
plt
plt %<>% add(ggtitle("S. Korea Mortality Rate"))
plt
plt %<>% add(geom_point())
plt
colnames(mortality)[126] <- "South Korea"
which(colnames(mortality) == "Korea..Dem..People.s.Rep.")
colnames(mortality)[193] <- "North Korea"
plt2 <- ggplot(mortality, aes(y=`Korea..Rep.`,x=1960:2015,colour = cyl))+geom_line()+xlab("Year")
plt2
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=1960:2015,colour = cyl))+geom_line()+xlab("Year")
plt2
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=1960:2015,colour = cyl))+geom_point()+xlab("Year")
plt2
scale_colour_gradient(..., low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar")
scale_colour_gradient(low = "#132B43", high = "#56B1F7",
space = "Lab", na.value = "grey50", guide = "colourbar")
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=1960:2015,colour = 1960:2015))+geom_point()+xlab("Year")
plt2
years <- 1960:2015
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = year))+geom_point()+xlab("Year")
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = year))+geom_point()+xlab("Year")
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = year))+geom_point()+xlab("Year")+geom_line()
plt2
year <- years
plt2
`South Korea`
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()
plt2
which(colnames(mortality) == "South Korea")
plt2 %<>% add(labs(colour = "Death rate"))
plt2
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = -1*`South Korea`))+geom_point()+xlab("Year")+geom_line()
plt2
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = -1*`South Korea`))+geom_point()+xlab("Year")+geom_line()
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = -1*`South Korea`))+geom_point()+xlab("Year")+geom_line() + scale_fill_distiller(palette = "Oranges", trans = "reverse",
limits = c(10,0), breaks=c(0,2,8))
plt2
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line() + scale_fill_distiller(palette = "Oranges", trans = "reverse",
limits = c(10,0), breaks=c(0,2,8))
plt2
plt2
plt2 <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line() + scale_fill_distiller(palette = "Oranges", trans = "reverse", limits = c(10,0), breaks=c(0,2,8))
plt2
plt2 <- ggplot(mortality, aes(y=`Costa Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000")
plt2
plt2
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000")
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000")
plt2
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
plt2
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
plt2
)
)
)
)
)))
jklasdfj
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
plt2
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
library(ggplot)
library(ggplot2)
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_fill_brewer(palette="Oranges")
plt2
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
plt2
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
plt2 <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
plt2
plt <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
plt
skmort <- plt
crmort <- plt2
plt
plt2
path = "/Users/elliotstahnke/programs/r-workshop/mortality/mortality.csv"
mortality <- read.csv(file=path,header=TRUE,sep="\t")
colnames(mortality)[1] <- "Year"
colnames(mortality)[126] <- "South Korea"
colnames(mortality)[193] <- "North Korea"
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
crmort <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
view(skmort)
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point()+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
skmort
crmort <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point()+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
crmort
. <- 5
.+2
read
?read
data
?data
?data.frame
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point(shape=".")+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
skmort
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point(shape=factor(cyl))+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
install.packages("cyl")
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point(size=.5)+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
skmort
crmort <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point(size=.5)+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
crmort
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point(size=.5)+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
skmort
crmort <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point(size=.5)+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")
crmort
skmort <- ggplot(mortality, aes(y=`South Korea`,x=years,colour = `South Korea`))+geom_point(size=.5)+xlab("Year")+geom_line()+ylab("South Korea Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red")+ylim(0,15)
skmort
crmort <- ggplot(mortality, aes(y=`Costa.Rica`,x=years,colour = `Costa.Rica`))+geom_point(size=.5)+xlab("Year")+geom_line()+ylab("Costa Rica Mortality Rates per 1000") + scale_colour_gradient(low="blue",high="red") + ylim(0,15)
crmort
mtcars
save.rds(mortality)
saveRDS(mortality)
saveRDS(mortality, file="mortality")
str(mortality)
mortality$FeatureType <- "Mortality Rate"
str(mortality)
mortality
saveRDS(mortality, file="mortality.rda")
saveRDS(mortality, file="mortality")
?prcomp
View(mortality)
path = "/Users/elliotstahnke/programs/r-workshop/mortality/mortality.csv"
mortality <- read.csv(file=path,header=TRUE,sep="\t")
colnames(mortality)[1] <- "Year"
colnames(mortality)[126] <- "South Korea"
colnames(mortality)[193] <- "North Korea"
source('~/programs/SUSA/PopulationML.R', echo=TRUE)
source('~/programs/SUSA/PopulationML.R', echo=TRUE)
ggplot(cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U), aes(PC1, PC2)) +
geom_text(aes(label=only2015df$Country), size=2,check_overlap = TRUE)
ggplot(cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U), aes(PC1, PC2)) +
geom_text(aes(label=only2015df$Country), size=4,check_overlap = TRUE)
ggplot(cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U), aes(PC1, PC2)) +
geom_text(aes(label=only2015df$Country), size=2.2,check_overlap = TRUE)
ggplot(cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U), aes(PC1, PC2)) +
geom_text(aes(label=only2015df$Country), size=2,check_overlap = TRUE)
ggplot(cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U), aes(PC1, PC2)) +
geom_text(aes(label=only2015df$Country), size=2.5,check_overlap = TRUE)
as.matrix(only2015df[3:6]) %*% U
variance_proportions
variances
U <- evecs$rotation[,c("PC1", "PC2")]
only2015df <- df[df$Year==2015,]
as.matrix(only2015df[3:6]) %*% U
cbind.data.frame(df$Country, as.matrix(only2015df[3:6]) %*% U)
cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U)
dennis <- cbind.data.frame(only2015df$Country, as.matrix(only2015df[3:6]) %*% U)
saverds
saveRDS
saveRDS(dennis)
saveRDS(dennis,file="2PCA")
cbind.data.frame(df$Country, as.matrix(df[3:6]) %*% U)
dennis = cbind.data.frame(df$Country, as.matrix(df[3:6]) %*% U)
saveRDS(dennis,file="2PCA")
library(dplyr)
library(tidyr)
library(magrittr)
library(ggplot2)
library(ggthemr)
library(grid)
singles <- readRDS("singlesize.rds")
colnames(singles) <- c("Year", "Total", "(0,1400]","(1400,1799]","(1799,2399]","(2399,2999]","(2999,4000]")
setwd("~/Dropbox/SUSA")
library(dplyr)
library(tidyr)
library(magrittr)
library(ggplot2)
library(ggthemr)
library(grid)
singles <- readRDS("singlesize.rds")
colnames(singles) <- c("Year", "Total", "(0,1400]","(1400,1799]","(1799,2399]","(2399,2999]","(2999,4000]")
singles %<>% gather("Range", "Number of Single Units", -Year, -Total)
view(singles)
View(singles)
housingUnits <-  data.frame(County=character(),
"Total Housing Units"=integer(),
Year=character(),
stringsAsFactors=FALSE)
for (year in 2010:2017) {
curHousingUnits <- read.csv(paste("E5", year, ".csv", sep=""), skip=3, nrows=58)
colnames(curHousingUnits)[1] <- "County"
colnames(curHousingUnits)[5] <- "Total Housing Units"
curHousingUnits <- curHousingUnits[,1:13] %>% subset(select=c("County", "Total Housing Units"))
curHousingUnits$Year = year
curHousingUnits$`Total Housing Units` <- as.numeric(gsub(",","",curHousingUnits$`Total Housing Units`))
housingUnits %<>% rbind(curHousingUnits)
}
View(curHousingUnits)
curHousingUnits <- read.csv(paste("E5", 2015, ".csv", sep=""), skip=3, nrows=58)
View(curHousingUnits)
curHousingUnits <- curHousingUnits[,1:13]
housingUnits <-  data.frame(County=character(),
"Total Housing Units"=integer(),
Year=character(),
stringsAsFactors=FALSE)
for (year in 2010:2017) {
curHousingUnits <- read.csv(paste("E5", year, ".csv", sep=""), skip=3, nrows=58)
colnames(curHousingUnits)[1] <- "County"
colnames(curHousingUnits)[5] <- "Total Housing Units"
curHousingUnits <- curHousingUnits[,1:13]
curHousingUnits$Year = year
curHousingUnits$`Total Housing Units` <- as.numeric(gsub(",","",curHousingUnits$`Total Housing Units`))
housingUnits %<>% rbind(curHousingUnits)
}
curHousingUnits <- read.csv(paste("E5", 2015, ".csv", sep=""), skip=3, nrows=58)
View(housingUnits)
hai <- read.rds("HAI.rds")
hai <- read.RDS("HAI.rds")
hai <- readRDS("HAI.rds")
View(hai)
hai[0]
View(hai[0])
View(hai[1])
View(hai[2])
View(hai[3])
hta <- readRDS("hta_ca.rds")
View(hta)
medinc <- readRDS("MedianIncome.RDS")
View(medinc)
medhome <- readRDS("MedianHomePrice.RDS")
View(medhome)
hai <- read.csv("HistoricalHAI.csv")
View(hai)
hai <- read.csv("HistoricalHAI.csv", skip=3)
View(hai)
hai[2,2]
hai[2,2] + hai[3,2]
hai <- read.csv("HistoricalHAI.csv", skip=3)
View(hai)
haiyear <- read.csv("HAIYearly.csv")
View(haiyear)
year<- 1991
seq(year - 1990, year-1979,1)
hai[2:end]
hai[2:last]
hai[:,-1]
hai[seq(year - 1990, year-1979,1), -1]
View(hai[seq(year - 1990, year-1979,1), -1])
df <- hai[seq(year - 1990, year-1979,1), -1]
mean(df, na.rm=TRUE)
df[1,1] + df[1,2]
colMeans(df, na.rm=TRUE)
type(df)
class(df[1,1])
class(df[1,3])
sapply(df, class)
sapply(df, is.numeric)
hai <- read.csv("HistoricalHAI.csv", skip=3)
haiyear <- read.csv("HAIYearly.csv")
colMeans(df, na.rm=TRUE)
df <- hai[seq(year - 1990, year-1979,1), -1]
colMeans(df, na.rm=TRUE)
if (year <= 2005) {
data <- hai[seq(year - 1990, year-1979,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
}
View(haiyear)
for (year in 1991:2017) {
if (year <= 2005) {
data <- hai[seq(year - 1990, year-1979,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
}
}
View(haiyear)
for (year in 1991:2017) {
if (year <= 2005) {
data <- hai[seq((year - 1991)*12+1, (year-1991)*12+12,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
} else {
}
}
View(haiyear)
for (year in 1991:2017) {
if (year <= 2005) {
data <- hai[seq((year - 1991)*12+1, (year-1991)*12+12,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
} else {
data <- hai[seq(182+ (year - 2006) * 4, 186 + (year-2006)*4), -1]
haiyear[year-1990, -1] <- colMeans(data, na.rm=TRUE)
}
}
View(haiyear)
View(housingUnits)
buildingprices <- readRDS("BuildingPermits.RDS")
View(buildingprices)
buildingprices <- buildingprices[1:58, -19:20]
buildingprices <- buildingprices[1:58, -(19:20)]
saveRDS(buildingprices, "BuildingPermits.RDS")
buildingpermits <- readRDS("BuildingPermits.RDS")
View(buildingpermits)
rentalprice <- readRDS("RentalPrice.RDS")
View(rentalprice)
rentalprice <- readRDS("RentalPrice.RDS") %>% subset(State == "CA")
View(rentalprice)
correlations <- data.frame(matrix(ncol = 14, nrow = 58))
View(correlations)
colnames(correlations)[1] <- "County"
correlations$County <- buildingpermits$County
View(correlations)
buildingpermits[1,]
class(buildingpermits[1,])
hai <- haiyear[11:27, 3]
permits <- buildingpermits[1,]
cor(hai,permits)
cor(hai,permits, na.rm=TRUE)
hai
permits
permits <- as.numeric(buildingpermits[1,])
warnings()
permits <- as.numeric(gsub(",","",buildingpermits[1,]))
permits
permits <- as.numeric(gsub(",","",buildingpermits[1,-1]))
cor(permits,hai)
colnames(correlations)[1:2] <- c("County","Building Permits")
correlations$County <- buildingpermits$County
for (i in 1:58) {
hai <- haiyear[,2+i]
permits <- as.numeric(gsub(",","",buildingpermits[i,-1]))
correlations[i,2] <- cor(permits,hai)
}
permits
size(hai)
hai.size
shape(hai)
dim(hai)
len(hai)
length(hai)
length(permits)
permits <- c(rep(NA, 10), permits)
permits
cor(permits, hai)
?cor
cor(permits, hai, use="complete.obs")
for (i in 1:58) {
hai <- haiyear[,2+i]
permits <- as.numeric(gsub(",","",buildingpermits[i,-1]))
correlations[i,2] <- cor(permits,hai, use="complete.obs")
}
for (i in 1:58) {
hai <- haiyear[,2+i]
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[i,2] <- cor(permits,hai, use="complete.obs")
}
colnames(haiyear) <- gsub(".", " ", colnames(haiyear))
View(haiyear)
haiyear <- read.csv("HAIYearly.csv")
for (year in 1991:2017) {
if (year <= 2005) {
data <- hai[seq((year - 1991)*12+1, (year-1991)*12+12,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
} else {
data <- hai[seq(182+ (year - 2006) * 4, 186 + (year-2006)*4), -1]
haiyear[year-1990, -1] <- colMeans(data, na.rm=TRUE)
}
}
hai <- read.csv("HistoricalHAI.csv", skip=3)
haiyear <- read.csv("HAIYearly.csv")
for (year in 1991:2017) {
if (year <= 2005) {
data <- hai[seq((year - 1991)*12+1, (year-1991)*12+12,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
} else {
data <- hai[seq(182+ (year - 2006) * 4, 186 + (year-2006)*4), -1]
haiyear[year-1990, -1] <- colMeans(data, na.rm=TRUE)
}
}
colnames(haiyear) <- gsub(".", " ", colnames(haiyear), fixed=TRUE)
View(haiyear)
hai <- read.csv("HistoricalHAI.csv", skip=3)
haiyear <- read.csv("HAIYearly.csv")
for (year in 1991:2017) {
if (year <= 2005) {
data <- hai[seq((year - 1991)*12+1, (year-1991)*12+12,1), -1]
haiyear[year-1990,-1] <- colMeans(data, na.rm=TRUE)
} else {
data <- hai[seq(182+ (year - 2006) * 4, 186 + (year-2006)*4), -1]
haiyear[year-1990, -1] <- colMeans(data, na.rm=TRUE)
}
}
colnames(haiyear) <- gsub(".", " ", colnames(haiyear), fixed=TRUE)
which(correlations$County == "Alpine")
which(correlations$County == "Alpine").value
which(correlations$County == "Alpine").value[1]
which(correlations$County == "Alpine")[1]
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
}
buildingpermits <- readRDS("BuildingPermits.RDS")
View(housingUnits)
colnames(correlations)[3:14] <- colnames(housingUnits)[2:13]
feature <- as.numeric(gsub(",", "", subset(housingUnits, County == countyname)[,1+j]))
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
for (j in 1:12) {
feature <- as.numeric(gsub(",", "", subset(housingUnits, County == countyname)[,1+j]))
}
}
feature
length(hai)
correlations[ind, j+2] <- cor(feature, hai)
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
for (j in 1:12) {
feature <- c(rep(NA,19), as.numeric(gsub(",", "", subset(housingUnits, County == countyname)[,1+j])))
correlations[ind, j+2] <- cor(feature, hai)
}
}
View(correlations)
feature
hai
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
for (j in 1:12) {
feature <- c(rep(NA,19), as.numeric(gsub(",", "", subset(housingUnits, County == countyname)[,1+j])))
correlations[ind, j+2] <- cor(feature, hai, use="complete.obs")
}
}
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
for (j in 1:12) {
feature <- c(rep(NA,19), as.numeric(gsub("%", "", gsub(",", "", subset(housingUnits, County == countyname)[,1+j]), fixed=TRUE)))
correlations[ind, j+2] <- cor(feature, hai, use="complete.obs")
}
}
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
print(ind)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
for (j in 1:12) {
feature <- c(rep(NA,19), as.numeric(gsub("%", "", gsub(",", "", subset(housingUnits, County == countyname)[,1+j]), fixed=TRUE)))
correlations[ind, j+2] <- cor(feature, hai, use="complete.obs")
}
}
correlations <- data.frame(matrix(ncol = 14, nrow = 58))
colnames(correlations)[1:2] <- c("County","Building Permits")
colnames(correlations)[3:14] <- colnames(housingUnits)[2:13]
correlations$County <- buildingpermits$County
for (i in 1:43) {
hai <- haiyear[,2+i]
countyname <- colnames(haiyear)[2+i]
ind = which(correlations$County == countyname)
print(ind)
permits <- c(rep(NA, 10), as.numeric(gsub(",","",buildingpermits[i,-1])))
correlations[ind,2] <- cor(permits,hai, use="complete.obs")
for (j in 1:12) {
feature <- c(rep(NA,19), as.numeric(gsub("%", "", gsub(",", "", subset(housingUnits, County == countyname)[,1+j]), fixed=TRUE)))
correlations[ind, j+2] <- cor(feature, hai, use="complete.obs")
}
}
colMeans(correlations, na.rm=TRUE)
colMeans(correlations[,-1], na.rm=TRUE)
colMeans(abs(correlations[,-1]), na.rm=TRUE)
View(housingUnits)
View(rentalprice)
df <- readRDS("CPI.rds")
View(df)
View(haiyear)
View(rentalprice)
View(medinc)
View(medhome)
View(medinc)
data$County <- buildingpermits$County
data <- data.frame(matrix(ncol = 14, nrow = 58))
colnames(data)[1] <- "County"
data$County <- buildingpermits$County
colMeans(correlations[,-1], na.rm=TRUE)
View(data)
tables
c()
c( c(), 1)
View(medinc)
View(haiyear)
which(colnames(haiyear)== "wee")
integer(0)
integer(0) + 5
colMeans(abs(correlations[,-1]), na.rm=TRUE)
